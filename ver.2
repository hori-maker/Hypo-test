<!DOCTYPE html>
<html lang="ja">
<head>
<meta charset="UTF-8" />
<title>高校生向け 仮説検定ラボ（t / χ² / 無相関）</title>
<meta name="viewport" content="width=device-width, initial-scale=1" />
<!-- UI -->
<script src="https://cdn.tailwindcss.com"></script>
<!-- 画像キャプチャ（日本語文字化け回避） -->
<script src="https://cdn.jsdelivr.net/npm/html2canvas@1.4.1/dist/html2canvas.min.js"></script>
<!-- PDF出力（画像貼付け方式なので文字化けしない） -->
<script src="https://cdn.jsdelivr.net/npm/jspdf@2.5.1/dist/jspdf.umd.min.js"></script>

<style>
/* ---- 見た目と安定性（擬似要素の暴発対策も含む） ---- */
*,
*::before,*::after { box-sizing:border-box; }
input::before,input::after,
label::before,label::after,
textarea::before,textarea::after,
.pill::before,.pill::after { content: none !important; }

.tab{ padding:.5rem 1rem; border-radius:1rem; border:1px solid #d1d5db; background:#fff; }
.tab.active{ background:#2563eb; color:#fff; border-color:#2563eb; }
.btn{ padding:.45rem .8rem; border-radius:.75rem; background:#f3f4f6; border:1px solid #e5e7eb; }
.btn.blue{ background:#2563eb; color:#fff; border-color:#2563eb; }
.pill{ padding:.25rem .6rem; border-radius:9999px; border:1px solid #d1d5db; }
.mono{ font-family: ui-monospace,Consolas,"Courier New",monospace; }
svg text{ font-family: ui-sans-serif,system-ui,-apple-system,"Segoe UI",Roboto,"Helvetica Neue",Arial,"Noto Sans"; }

/* 入力欄の高さを完全固定（ブラウザ差吸収） */
#input-card input[type="number"],
#input-card input[type="text"],
#input-card input[type="email"],
#input-card input[type="search"]{
  height:44px !important; padding:10px 12px !important; line-height:20px !important;
  font-size:14px !important; border:1px solid #e5e7eb; border-radius:12px;
  background:#fff; font-variant-numeric:tabular-nums; appearance:textfield;
  -webkit-appearance:none; -moz-appearance:textfield;
}
#input-card input[type="number"]::-webkit-outer-spin-button,
#input-card input[type="number"]::-webkit-inner-spin-button{ -webkit-appearance:none; margin:0; }
#input-card label{ display:flex; align-items:center; min-height:44px; font-size:14px; line-height:1.2; }
#input-card label sub{ line-height:0; }
#input-card .grid > *{ margin-top:0!important; margin-bottom:0!important; }

/* PNG用の疑似入力（今回は使わないが念のため） */
.input-print{ height:44px; padding:8px 12px; border:1px solid #e5e7eb; border-radius:12px; }
.textarea-print{ min-height:44px; padding:8px 12px; border:1px solid #e5e7eb; border-radius:12px; }
</style>
</head>

<body class="bg-gray-100 text-gray-900">
<div class="max-w-6xl mx-auto p-6 space-y-6">
  <header class="space-y-2">
    <div class="flex items-center justify-between gap-3 flex-wrap">
      <h1 class="text-2xl md:text-3xl font-bold">高校生向け 仮説検定ラボ</h1>
      <div class="flex gap-2 flex-wrap">
        <button id="btn-load-csv" class="btn">CSV読み込み</button>
        <input id="file-csv" type="file" accept=".csv,text/csv,text/plain" class="hidden" />
        <button id="btn-save-png" class="btn">PNG保存（結果一式）</button>
        <button id="btn-save-pdf" class="btn">PDF保存（結果一式）</button>
      </div>
    </div>
    <p class="text-gray-600 text-sm">
      t検定（1標本 / 2標本 / 対応あり） + χ²検定（適合度 / 独立性） + <b>無相関検定（Pearson）</b>
    </p>
  </header>

  <!-- タブ -->
  <div id="tabs" class="flex gap-3 flex-wrap">
    <button data-test="one" class="tab active">t: 1標本</button>
    <button data-test="unpaired" class="tab">t: 2標本 対応なし</button>
    <button data-test="paired" class="tab">t: 2標本 対応あり</button>
    <button data-test="chisq-gof" class="tab">χ²: 適合度</button>
    <button data-test="chisq-ind" class="tab">χ²: 独立性</button>
    <button data-test="corr" class="tab">相関: 無相関検定</button>
  </div>

  <!-- 入力 -->
  <div id="input-card" class="rounded-2xl shadow p-4 bg-white border"></div>

  <!-- 入力値まとめ（生成して差し込む） -->
  <div id="params-card" class="rounded-2xl shadow p-4 bg-white border"></div>

  <!-- 結果サマリー -->
  <div id="result-card" class="rounded-2xl shadow p-4 bg-white border"></div>

  <!-- ステップ -->
  <div id="steps-card" class="rounded-2xl shadow p-4 bg-white border"></div>

  <!-- グラフ -->
  <div id="graph-card" class="rounded-2xl shadow p-4 bg-white border">
    <svg id="plot" viewBox="0 0 600 200" class="w-full h-52"></svg>
    <div id="graph-note" class="text-xs text-gray-500 mt-2"></div>
  </div>

  <!-- エラー -->
  <div id="err" class="text-sm text-red-600"></div>

  <footer class="text-xs text-gray-500 pt-4">
    教材用サンプル。数値計算は近似です。授業・課題での利用歓迎。© <span id="year"></span>
  </footer>
</div>

<script>
/* ================== 数値ユーティリティ ================== */
function fmt(x,d=3){ return (isFinite(x)? Number(x.toFixed(d)):"").toString(); }
function assert(cond,msg){ if(!cond) throw new Error(msg); }
function sum(a){ return a.reduce((s,x)=>s+x,0); }
function parseNums(raw){ if(!raw) return []; const normalized = raw.replace(/[，、；;]+/g, ',').replace(/\u3000/g, ' ').replace(/[\t\r\n ]+/g, ','); return normalized.split(',').map(s=>parseFloat(s)).filter(Number.isFinite); }
function parseMatrix(raw){ const lines = raw.trim().split(/\r?\n/).filter(Boolean); return lines.map(line=>{ const row = line.replace(/[，、；;]+/g, ',').replace(/\u3000/g,' ').trim().split(/[\s,]+/).map(Number).filter(Number.isFinite); return row; }).filter(r=>r.length>0); }
function mean(a){ return sum(a)/a.length; }
function sampleStd(a){ if(a.length<2) return NaN; const m=mean(a); return Math.sqrt(a.reduce((s,x)=>s+(x-m)*(x-m),0)/(a.length-1)); }
function gamma(z){ const p=[676.5203681218851,-1259.1392167224028,771.3234287776531,-176.61502916214059,12.507343278686905,-0.13857109526572012,9.984369578019572e-6,1.5056327351493116e-7]; const g=7; if(z<0.5) return Math.PI/(Math.sin(Math.PI*z)*gamma(1-z)); z-=1; let x=0.99999999999980993; for(let i=0;i<p.length;i++) x+=p[i]/(z+i+1); const t=z+g+0.5; return Math.sqrt(2*Math.PI)*Math.pow(t,z+0.5)*Math.exp(-t)*x; }
function tPdf(x,v){ return (gamma((v+1)/2)/(Math.sqrt(v*Math.PI)*gamma(v/2)))*Math.pow(1+(x*x)/v,-(v+1)/2); }
function integrateSimpson(f,a,n=1600){ if(a===0) return 0; const sign=a<0?-1:1, A=Math.abs(a); let m=n; if(m%2===1) m+=1; const h=A/m; let s=f(0)+f(A); for(let i=1;i<m;i++){ s+=(i%2===0?2:4)*f(i*h); } return sign*(h/3)*s; }
function tCdf(x,v){ if(x===0) return 0.5; const sgn=x<0?-1:1; const area=integrateSimpson(u=>tPdf(u,v),Math.abs(x),2200); return sgn>0?0.5+area:0.5-area; }
function tInv(p, v){ let lo=-50, hi=50; for(let k=0;k<120;k++){ const mid=(lo+hi)/2, cm=tCdf(mid,v); if(cm<p) lo=mid; else hi=mid; } return (lo+hi)/2; }
function chiSquarePdf(x,k){ if(x<=0) return 0; return Math.pow(x, k/2 - 1) * Math.exp(-x/2) / ( Math.pow(2,k/2) * gamma(k/2) ); }
function gammap(a,x){ if(x<=0) return 0; if(x < a+1){ let ap=a, sum=1/a, del=sum; for(let n=1;n<=1000;n++){ ap+=1; del*=x/ap; sum+=del; if(Math.abs(del) < Math.abs(sum)*1e-12) break; } return sum*Math.exp(-x + a*Math.log(x) - Math.log(gamma(a))); }else{ let b=x+1-a, c=1/1e-30, d=1/b, h=d; for(let i=1;i<=1000;i++){ let an = -i*(i-a); b += 2; d = an*d + b; if(Math.abs(d) < 1e-30) d = 1e-30; c = b + an/c; if(Math.abs(c) < 1e-30) c = 1e-30; d = 1/d; const del = d*c; h *= del; if(Math.abs(del-1) < 1e-12) break; } return 1 - Math.exp(-x + a*Math.log(x) - Math.log(gamma(a))) * h; } }
function chiSquareCdf(x,k){ return gammap(k/2, x/2); }
function chiSquareInv(p,k){ let lo=0, hi=Math.max(10,k*5+10); while(chiSquareCdf(hi,k) < p) { hi*=2; if(hi>1e6) break; } for(let i=0;i<120;i++){ const mid=(lo+hi)/2, cm=chiSquareCdf(mid,k); if(cm<p) lo=mid; else hi=mid; } return (lo+hi)/2; }
function pValueFromT(stat, df, tail){ const cdf = tCdf(stat, df); if(tail==="two") return 2*Math.min(cdf, 1-cdf); if(tail==="right") return 1 - cdf; return cdf; }
function corrFromArrays(X,Y){ const n=Math.min(X.length,Y.length); const x=X.slice(0,n), y=Y.slice(0,n); const mx=mean(x), my=mean(y); const sx=sampleStd(x), sy=sampleStd(y); if(!(n>=3) || !(sx>0) || !(sy>0)) return {n: n, r: NaN}; const cov = x.reduce((s,xi,i)=> s + (xi-mx)*(y[i]-my), 0)/(n-1); const r = cov/(sx*sy); return {n, r}; }

/* ================== グラフ描画 ================== */
function drawTCurve(stat, tail, df, alpha){
  const svg=document.getElementById("plot");
  document.getElementById("graph-note").textContent = "青=棄却域（αに基づく臨界値）、白=非棄却域、赤線=観測統計量";
  let critL=null, critR=null;
  if(tail==="two"){ const c=tInv(1-alpha/2, df); critL=-c; critR=c; }
  else if(tail==="right"){ critR=tInv(1-alpha, df); }
  else { critL=tInv(alpha, df); }
  const maxAbs=Math.max(Math.abs(stat), critL!==null?Math.abs(critL):0, critR!==null?Math.abs(critR):0, 3.5);
  const xmax=Math.min(8, Math.max(4, Math.ceil(maxAbs+0.7))), xmin=-xmax;
  const width=600, height=200, steps=320;
  const X=x=>((x-xmin)/(xmax-xmin))*width, Y=(y,max)=>height-(y/max)*(height-16), pdf=x=>tPdf(x,df);
  const pts=[]; for(let i=0;i<=steps;i++){ const x=xmin+((xmax-xmin)*i)/steps; pts.push({x,y:pdf(x)}); }
  const ymax=Math.max(...pts.map(p=>p.y));
  const path=pts.map((p,i)=>`${i===0?"M":"L"}${X(p.x)},${Y(p.y,ymax)}`).join(" ");
  function inReject(x){ if(tail==="two") return (critL!==null && x<=critL) || (critR!==null && x>=critR); if(tail==="right") return x>=critR; return x<=critL; }
  let area="", open=false;
  pts.forEach((p,i)=>{ if(inReject(p.x)){ if(!open){ open=true; area+=`M${X(p.x)},${Y(0,ymax)}`;} area+=`L${X(p.x)},${Y(p.y,ymax)}`; if(i===pts.length-1) area+=`L${X(p.x)},${Y(0,ymax)} Z`; }
                       else if(open){ open=false; area+=`L${X(pts[i-1].x)},${Y(0,ymax)} Z`; }});
  const statLine=`M${X(stat)},${Y(0,ymax)} L${X(stat)},${Y(pdf(stat),ymax)}`;
  let critLines=""; if(critL!==null) critLines+=`M${X(critL)},${Y(0,ymax)} L${X(critL)},${Y(pdf(critL),ymax)} `; if(critR!==null) critLines+=`M${X(critR)},${Y(0,ymax)} L${X(critR)},${Y(pdf(critR),ymax)} `;
  const ticks=[]; for(let x=Math.ceil(xmin); x<=Math.floor(xmax); x++) ticks.push(x);
  svg.innerHTML = `
    <rect x="0" y="0" width="${width}" height="${height}" fill="#fff" rx="12" stroke="#e5e7eb"/>
    <path d="${path}" fill="none" stroke="#111827" stroke-width="2"/>
    <path d="${area}" fill="#60a5fa" opacity="0.35"/>
    <path d="${critLines}" stroke="#6b7280" stroke-dasharray="4 3" stroke-width="1.5"/>
    <path d="${statLine}" stroke="#ef4444" stroke-width="2"/>
    ${ticks.map(x=>`<g><line x1="${X(x)}" y1="${height}" x2="${X(x)}" y2="${height-8}" stroke="#9ca3af"/><text x="${X(x)}" y="${height-2}" font-size="10" text-anchor="middle" fill="#6b7280">${x}</text></g>`).join("")}
    <text x="${width-8}" y="16" font-size="12" text-anchor="end" fill="#6b7280">t分布 (df=${df}) | α=${alpha}</text>
    <text x="8" y="16" font-size="12" fill="#111827">棄却域: ${tail==="two"?"両側":(tail==="right"?"右片側":"左片側")}</text>
    <text x="${Math.min(width-8, Math.max(8, ((stat - xmin)/(xmax-xmin))*width))}" y="28" font-size="11" text-anchor="start" fill="#ef4444">t=${fmt(stat)}</text>
  `;
}
function drawChiCurve(stat, df, alpha){
  const svg=document.getElementById("plot");
  document.getElementById("graph-note").textContent = "青=棄却域（右片側, α）, 白=非棄却域, 赤線=観測統計量";
  const crit = chiSquareInv(1-alpha, df);
  const p95 = chiSquareInv(0.995, Math.max(1,df));
  const xmax = Math.min(200, Math.max(8, Math.ceil(Math.max(crit, stat, p95)*1.05)));
  const xmin = 0, width=600, height=200, steps=400;
  const X=x=>((x-xmin)/(xmax-xmin))*width, Y=(y,max)=>height-(y/max)*(height-16), pdf=x=>chiSquarePdf(x,df);
  const pts=[]; for(let i=0;i<=steps;i++){ const x=xmin+((xmax-xmin)*i)/steps; pts.push({x,y:pdf(x)}); }
  const ymax=Math.max(...pts.map(p=>p.y));
  const path=pts.map((p,i)=>`${i===0?"M":"L"}${X(p.x)},${Y(p.y,ymax)}`).join(" ");
  let area="", open=false;
  pts.forEach((p,i)=>{ if(p.x>=crit){ if(!open){ open=true; area+=`M${X(p.x)},${Y(0,ymax)}`;} area+=`L${X(p.x)},${Y(p.y,ymax)}`; if(i===pts.length-1) area+=`L${X(p.x)},${Y(0,ymax)} Z`; }
                       else if(open){ open=false; area+=`L${X(pts[i-1].x)},${Y(0,ymax)} Z`; }});
  const statLine=`M${X(stat)},${Y(0,ymax)} L${X(stat)},${Y(pdf(stat),ymax)}`;
  const critLine=`M${X(crit)},${Y(0,ymax)} L${X(crit)},${Y(pdf(crit),ymax)}`;
  const ticks=[]; const stepGuess = Math.max(1, Math.ceil(xmax/10));
  for(let x=0; x<=xmax; x+=stepGuess){ ticks.push(x); }
  svg.innerHTML = `
    <rect x="0" y="0" width="${width}" height="${height}" fill="#fff" rx="12" stroke="#e5e7eb"/>
    <path d="${path}" fill="none" stroke="#111827" stroke-width="2"/>
    <path d="${area}" fill="#60a5fa" opacity="0.35"/>
    <path d="${critLine}" stroke="#6b7280" stroke-dasharray="4 3" stroke-width="1.5"/>
    <path d="${statLine}" stroke="#ef4444" stroke-width="2"/>
    ${ticks.map(x=>`<g><line x1="${X(x)}" y1="${height}" x2="${X(x)}" y2="${height-8}" stroke="#9ca3af"/><text x="${X(x)}" y="${height-2}" font-size="10" text-anchor="middle" fill="#6b7280">${x}</text></g>`).join("")}
    <text x="${width-8}" y="16" font-size="12" text-anchor="end" fill="#6b7280">χ²分布 (df=${df}) | α=${alpha}</text>
    <text x="8" y="16" font-size="12" fill="#111827">棄却域: χ² ≥ ${fmt(crit)}</text>
    <text x="${Math.min(width-8, Math.max(8, ((stat - xmin)/(xmax-xmin))*width))}" y="28" font-size="11" text-anchor="start" fill="#ef4444">χ²=${fmt(stat)}</text>
  `;
}

/* ================== 状態 & UI ================== */
let currentTest="one";  // one / unpaired / paired / chisq-gof / chisq-ind / corr
let dataMode="summary"; // summary / raw
let tail="two";         // two / right / left

function setActiveTab(){
  document.querySelectorAll("#tabs .tab").forEach(btn=>{
    btn.classList.toggle("active", btn.dataset.test===currentTest);
  });
}
function tailSelector(){ return `
  <div class="flex items-center gap-2 flex-wrap mb-3">
    <span class="text-sm text-gray-600">検定の種類:</span>
    <label class="pill"><input type="radio" name="tail" value="two"  ${tail==="two"?"checked":""}/> 両側</label>
    <label class="pill"><input type="radio" name="tail" value="right" ${tail==="right"?"checked":""}/> 右片側（大きい）</label>
    <label class="pill"><input type="radio" name="tail" value="left"  ${tail==="left"?"checked":""}/> 左片側（小さい）</label>
  </div>`; }
function modeSwitch(){ return `
  <div class="flex items-center gap-4 mb-3">
    <span class="text-sm text-gray-600">データ入力モード:</span>
    <label class="text-sm"><input type="radio" name="mode" value="summary" ${dataMode==="summary"?"checked":""}/> 要約値</label>
    <label class="text-sm"><input type="radio" name="mode" value="raw" ${dataMode==="raw"?"checked":""}/> 生データ貼り付け</label>
  </div>`; }

function renderInputs(){
  const card=document.getElementById("input-card");
  if(currentTest==="one"){
    card.innerHTML=`
      <h2 class="font-semibold mb-2">t検定: 1標本</h2>
      ${tailSelector()} ${modeSwitch()}
      <div id="one-summary" class="${dataMode==="summary"?"block":"hidden"}">
        <div class="grid md:grid-cols-5 gap-3 items-center">
          <label>標本平均 x<sub>bar</sub></label><input id="xbar" type="number" value="10.2">
          <label>帰無仮説平均 μ<sub>0</sub></label><input id="mu0" type="number" value="10">
          <label>標本標準偏差 s</label><input id="s" type="number" value="1.8">
          <label>標本サイズ n</label><input id="n" type="number" value="16">
          <label>有意水準 α</label><input id="alpha" type="text" inputmode="decimal" value="0.05">
        </div>
      </div>
      <div id="one-raw" class="${dataMode==="raw"?"block":"hidden"}">
        <div class="grid md:grid-cols-2 gap-4">
          <div>
            <label class="block text-sm text-gray-600 mb-1">生データ（1列、区切り混在OK）</label>
            <textarea id="one-raw-text" rows="6" class="w-full">10, 10, 9, 12, 11, 9, 10, 11</textarea>
          </div>
          <div class="bg-gray-50 rounded-xl p-3 text-sm space-y-1">
            <div class="text-gray-600">自動計算（要約値）</div>
            <div>平均 x̄: <span id="one-raw-xbar" class="mono"></span></div>
            <div>s: <span id="one-raw-s" class="mono"></span></div>
            <div>n: <span id="one-raw-n" class="mono"></span></div>
            <div>μ<sub>0</sub>: <input id="mu0_raw" type="number" value="10" class="border rounded px-2 py-1 w-28 ml-1"></div>
            <div>α: <input id="alpha_raw" type="text" value="0.05" class="border rounded px-2 py-1 w-28 ml-1"></div>
          </div>
        </div>
      </div>
      <div class="mt-3"><button id="btn-calc" class="btn blue">計算</button></div>
    `;
  } else if(currentTest==="unpaired"){
    card.innerHTML=`
      <h2 class="font-semibold mb-2">t検定: 2標本（対応なし, Welch）</h2>
      ${tailSelector()} ${modeSwitch()}
      <div id="unpaired-summary" class="${dataMode==="summary"?"block":"hidden"}">
        <div class="grid md:grid-cols-6 gap-3 items-center">
          <label>x<sub>bar1</sub></label><input id="x1" type="number" value="10.8">
          <label>s<sub>1</sub></label><input id="s1" type="number" value="2.1">
          <label>n<sub>1</sub></label><input id="n1" type="number" value="15">
          <label>x<sub>bar2</sub></label><input id="x2" type="number" value="9.7">
          <label>s<sub>2</sub></label><input id="s2" type="number" value="1.9">
          <label>n<sub>2</sub></label><input id="n2" type="number" value="12">
          <label>有意水準 α</label><input id="alpha" type="text" value="0.05">
        </div>
      </div>
      <div id="unpaired-raw" class="${dataMode==="raw"?"block":"hidden"}">
        <div class="grid md:grid-cols-2 gap-4">
          <div><label class="block text-sm text-gray-600 mb-1">生データ（群1）</label>
            <textarea id="unpaired-raw-a" rows="6" class="w-full">10.8, 9.5, 11.0, 13.2, 8.9</textarea></div>
          <div><label class="block text-sm text-gray-600 mb-1">生データ（群2）</label>
            <textarea id="unpaired-raw-b" rows="6" class="w-full">9.7, 8.1, 10.0, 7.9, 9.4</textarea></div>
        </div>
        <div class="grid md:grid-cols-2 gap-4 mt-3 text-sm">
          <div class="bg-gray-50 rounded-xl p-3">群1 → 平均: <span id="unpaired-a-xbar" class="mono"></span> / s: <span id="unpaired-a-s" class="mono"></span> / n: <span id="unpaired-a-n" class="mono"></span></div>
          <div class="bg-gray-50 rounded-xl p-3">群2 → 平均: <span id="unpaired-b-xbar" class="mono"></span> / s: <span id="unpaired-b-s" class="mono"></span> / n: <span id="unpaired-b-n" class="mono"></span></div>
        </div>
        <div class="mt-2 text-sm">α: <input id="alpha_raw_unp" type="text" value="0.05" class="border rounded px-2 py-1 w-28 ml-1"></div>
      </div>
      <div class="mt-3"><button id="btn-calc" class="btn blue">計算</button></div>
    `;
  } else if(currentTest==="paired"){
    card.innerHTML=`
      <h2 class="font-semibold mb-2">t検定: 2標本（対応あり）</h2>
      ${tailSelector()} ${modeSwitch()}
      <div id="paired-summary" class="${dataMode==="summary"?"block":"hidden"}">
        <div class="grid md:grid-cols-5 gap-3 items-center">
          <label>差の平均 d<sub>bar</sub></label><input id="dbar" type="number" value="1.2">
          <label>差の標準偏差 s<sub>d</sub></label><input id="sd" type="number" value="1.1">
          <label>組の数 n</label><input id="n" type="number" value="10">
          <label>有意水準 α</label><input id="alpha" type="text" value="0.05">
        </div>
      </div>
      <div id="paired-raw" class="${dataMode==="raw"?"block":"hidden"}">
        <div class="grid md:grid-cols-2 gap-4">
          <div><label class="block text-sm text-gray-600 mb-1">生データ（前/条件A）</label>
            <textarea id="paired-raw-a" rows="6" class="w-full">10, 11, 12, 9, 10</textarea></div>
          <div><label class="block text-sm text-gray-600 mb-1">生データ（後/条件B）</label>
            <textarea id="paired-raw-b" rows="6" class="w-full">11, 13, 13, 10, 11</textarea></div>
        </div>
        <div class="bg-gray-50 rounded-xl p-3 mt-3 text-sm">
          <div>差（B - A）の要約 → 平均 d̄: <span id="paired-dbar" class="mono"></span> / s<sub>d</sub>: <span id="paired-sd" class="mono"></span> / n: <span id="paired-n" class="mono"></span></div>
        </div>
        <div class="mt-2 text-sm">α: <input id="alpha_raw_pair" type="text" value="0.05" class="border rounded px-2 py-1 w-28 ml-1"></div>
      </div>
      <div class="mt-3"><button id="btn-calc" class="btn blue">計算</button></div>
    `;
  } else if(currentTest==="chisq-gof"){
    card.innerHTML=`
      <h2 class="font-semibold mb-2">χ²検定: 適合度（Goodness-of-Fit）</h2>
      <div class="grid md:grid-cols-2 gap-4">
        <div>
          <label class="block text-sm text-gray-600 mb-1">観測度数 O<sub>i</sub>（1行/1列、区切り混在OK）</label>
          <textarea id="gof-obs" rows="6" class="w-full">25, 30, 18, 27</textarea>
          <div class="mt-2 text-sm text-gray-600">期待（確率）p<sub>i</sub> か 期待（度数）E<sub>i</sub> を入力</div>
          <textarea id="gof-exp" rows="4" class="w-full">0.25,0.25,0.25,0.25</textarea>
          <div class="mt-2 text-sm">推定パラメータ数 m: <input id="gof-m" type="number" value="0" class="border rounded px-2 py-1 w-24"></div>
          <div class="mt-2 text-sm">有意水準 α: <input id="gof-alpha" type="text" value="0.05" class="border rounded px-2 py-1 w-24"></div>
        </div>
        <div class="bg-gray-50 rounded-xl p-3 text-sm">
          <div class="text-gray-600 mb-1">計算式</div>
          <div>χ² = Σ (O<sub>i</sub> - E<sub>i</sub>)² / E<sub>i</sub></div>
          <div>df = k - 1 - m（k=カテゴリ数）</div>
          <div class="mt-2 text-gray-600">注意: 期待度数 E<sub>i</sub> はすべて 5 以上が望ましい</div>
        </div>
      </div>
      <div class="mt-3"><button id="btn-calc" class="btn blue">計算</button></div>
    `;
  } else if(currentTest==="chisq-ind"){
    card.innerHTML=`
      <h2 class="font-semibold mb-2">χ²検定: 独立性（クロス表）</h2>
      <div class="grid md:grid-cols-2 gap-4">
        <div>
          <label class="block text-sm text-gray-600 mb-1">度数表（行×列をそのまま貼付: 区切り混在OK）</label>
          <textarea id="ind-mat" rows="8" class="w-full">10 20 30
15 25 20</textarea>
          <div class="mt-2 text-sm">有意水準 α: <input id="ind-alpha" type="text" value="0.05" class="border rounded px-2 py-1 w-24"></div>
        </div>
        <div class="bg-gray-50 rounded-xl p-3 text-sm">
          <div>期待度数 E<sub>ij</sub> = (行和<sub>i</sub> × 列和<sub>j</sub>) / 総計</div>
          <div>χ² = Σ (O<sub>ij</sub> - E<sub>ij</sub>)² / E<sub>ij</sub></div>
          <div>df = (r - 1)(c - 1)</div>
        </div>
      </div>
      <div class="mt-3"><button id="btn-calc" class="btn blue">計算</button></div>
    `;
  } else if(currentTest==="corr"){
    card.innerHTML=`
      <h2 class="font-semibold mb-2">相関: 無相関検定（Pearson）</h2>
      ${tailSelector()} ${modeSwitch()}
      <div id="corr-summary" class="${dataMode==="summary"?"block":"hidden"}">
        <div class="grid md:grid-cols-4 gap-3 items-center">
          <label>相関係数 r</label><input id="corr-r" type="number" step="0.0001" value="0.32">
          <label>標本サイズ n</label><input id="corr-n" type="number" value="28">
          <label>有意水準 α</label><input id="corr-alpha" type="text" value="0.05">
        </div>
        <p class="text-sm text-gray-600 mt-2">H<sub>0</sub>: ρ = 0 に対して、${tail==="two"?"両側":"片側"} 検定（t 分布, df=n-2）</p>
      </div>
      <div id="corr-raw" class="${dataMode==="raw"?"block":"hidden"}">
        <div class="grid md:grid-cols-2 gap-4">
          <div><label class="block text-sm text-gray-600 mb-1">X（1列）</label>
            <textarea id="corr-x" rows="6" class="w-full">10,12,13,9,11</textarea></div>
          <div><label class="block text-sm text-gray-600 mb-1">Y（1列）</label>
            <textarea id="corr-y" rows="6" class="w-full">8,14,12,7,10</textarea></div>
        </div>
        <div class="bg-gray-50 rounded-xl p-3 mt-3 text-sm">
          <div>r = cov(X,Y) / (s<sub>X</sub> s<sub>Y</sub>)</div>
          <div>t = r √((n-2)/(1-r²)), df = n-2</div>
          <div class="mt-2">α: <input id="corr-alpha-raw" type="text" value="0.05" class="border rounded px-2 py-1 w-28 ml-1"></div>
        </div>
      </div>
      <div class="mt-3"><button id="btn-calc" class="btn blue">計算</button></div>
    `;
  }
  document.querySelectorAll('input[name="mode"]').forEach(r=>r.addEventListener('change', e=>{ dataMode = e.target.value; renderInputs(); hookRawPreview(); renderParamsCard(); }));
  document.querySelectorAll('input[name="tail"]').forEach(r=>r.addEventListener('change', e=>{ tail = e.target.value; renderParamsCard(); }));
  const btn = document.getElementById("btn-calc"); if(btn) btn.addEventListener("click", calc);
  hookRawPreview();
  renderParamsCard(); // 入力切替で更新
}

function hookRawPreview(){
  if(currentTest==="one" && dataMode==="raw"){
    const ta = document.getElementById("one-raw-text");
    const update=()=>{ const a=parseNums(ta.value);
      document.getElementById("one-raw-xbar").textContent=fmt(a.length?mean(a):NaN);
      document.getElementById("one-raw-s").textContent=fmt(a.length>=2?sampleStd(a):NaN);
      document.getElementById("one-raw-n").textContent=a.length; };
    ta.addEventListener("input",update); update();
  }
  if(currentTest==="unpaired" && dataMode==="raw"){
    const aTa=document.getElementById("unpaired-raw-a"), bTa=document.getElementById("unpaired-raw-b");
    const update=()=>{ const A=parseNums(aTa.value), B=parseNums(bTa.value);
      document.getElementById("unpaired-a-xbar").textContent=fmt(A.length?mean(A):NaN);
      document.getElementById("unpaired-a-s").textContent=fmt(A.length>=2?sampleStd(A):NaN);
      document.getElementById("unpaired-a-n").textContent=A.length;
      document.getElementById("unpaired-b-xbar").textContent=fmt(B.length?mean(B):NaN);
      document.getElementById("unpaired-b-s").textContent=fmt(B.length>=2?sampleStd(B):NaN);
      document.getElementById("unpaired-b-n").textContent=B.length; };
    aTa.addEventListener("input",update); bTa.addEventListener("input",update); update();
  }
  if(currentTest==="paired" && dataMode==="raw"){
    const aTa=document.getElementById("paired-raw-a"), bTa=document.getElementById("paired-raw-b");
    const update=()=>{ const A=parseNums(aTa.value), B=parseNums(bTa.value);
      const n=Math.min(A.length,B.length), D=Array.from({length:n},(_,i)=>B[i]-A[i]);
      document.getElementById("paired-dbar").textContent=fmt(D.length?mean(D):NaN);
      document.getElementById("paired-sd").textContent=fmt(D.length>=2?sampleStd(D):NaN);
      document.getElementById("paired-n").textContent=D.length; };
    aTa.addEventListener("input",update); bTa.addEventListener("input",update); update();
  }
}

/* ================== 入力値まとめ ================== */
function getParamsSnapshot(){
  const T = tail==="two" ? "両側" : tail==="right" ? "右片側" : "左片側";
  if(currentTest==="one"){
    if(dataMode==="summary"){
      return { タブ:"t:1標本", 検定:T,
        xbar:document.getElementById("xbar")?.value,
        mu0:document.getElementById("mu0")?.value,
        s:document.getElementById("s")?.value,
        n:document.getElementById("n")?.value,
        α:document.getElementById("alpha")?.value };
    }else{
      return { タブ:"t:1標本(生データ)", 検定:T,
        データ:document.getElementById("one-raw-text")?.value,
        mu0:document.getElementById("mu0_raw")?.value,
        α:document.getElementById("alpha_raw")?.value };
    }
  }
  if(currentTest==="unpaired"){
    if(dataMode==="summary"){
      return { タブ:"t:2標本(対応なし)", 検定:T,
        "x̄1":document.getElementById("x1")?.value, s1:document.getElementById("s1")?.value, n1:document.getElementById("n1")?.value,
        "x̄2":document.getElementById("x2")?.value, s2:document.getElementById("s2")?.value, n2:document.getElementById("n2")?.value,
        α:document.getElementById("alpha")?.value };
    }else{
      return { タブ:"t:2標本(対応なし/生データ)", 検定:T,
        群1:document.getElementById("unpaired-raw-a")?.value,
        群2:document.getElementById("unpaired-raw-b")?.value,
        α:document.getElementById("alpha_raw_unp")?.value };
    }
  }
  if(currentTest==="paired"){
    if(dataMode==="summary"){
      return { タブ:"t:対応あり", 検定:T,
        "d̄":document.getElementById("dbar")?.value,
        sd:document.getElementById("sd")?.value,
        n:document.getElementById("n")?.value,
        α:document.getElementById("alpha")?.value };
    }else{
      return { タブ:"t:対応あり(生データ)", 検定:T,
        前A:document.getElementById("paired-raw-a")?.value,
        後B:document.getElementById("paired-raw-b")?.value,
        α:document.getElementById("alpha_raw_pair")?.value };
    }
  }
  if(currentTest==="chisq-gof"){
    return { タブ:"χ²:適合度",
      観測O:document.getElementById("gof-obs")?.value,
      期待:document.getElementById("gof-exp")?.value,
      推定m:document.getElementById("gof-m")?.value,
      α:document.getElementById("gof-alpha")?.value };
  }
  if(currentTest==="chisq-ind"){
    return { タブ:"χ²:独立性",
      度数表:document.getElementById("ind-mat")?.value,
      α:document.getElementById("ind-alpha")?.value };
  }
  if(currentTest==="corr"){
    if(dataMode==="summary"){
      return { タブ:"無相関検定", 検定:T,
        r:document.getElementById("corr-r")?.value,
        n:document.getElementById("corr-n")?.value,
        α:document.getElementById("corr-alpha")?.value };
    }else{
      return { タブ:"無相関検定(生データ)", 検定:T,
        X:document.getElementById("corr-x")?.value,
        Y:document.getElementById("corr-y")?.value,
        α:document.getElementById("corr-alpha-raw")?.value };
    }
  }
  return {};
}

function renderParamsCard(){
  const card = document.getElementById("params-card");
  const obj = getParamsSnapshot();
  const rows = Object.entries(obj).map(([k,v])=>{
    const val = (v==null || v==="") ? "<span class='text-gray-400'>（未入力）</span>"
                                    : String(v).replace(/</g,"&lt;").replace(/>/g,"&gt;");
    return `<tr><th class="text-left text-gray-500 whitespace-nowrap pr-4 py-1">${k}</th><td class="font-mono py-1">${val}</td></tr>`;
  }).join("");
  card.innerHTML = `<h2 class="font-semibold mb-2">入力値まとめ</h2>
    <div class="overflow-x-auto"><table class="text-sm">${rows}</table></div>`;
}

/* ================== 計算本体 ================== */
function calc(){
  try{
    document.getElementById("err").textContent=""; let stepsHTML="", summaryHTML="";
    if(currentTest==="one" || currentTest==="unpaired" || currentTest==="paired"){
      let stat=0, df=0, p=0, alpha=0.05;
      if(currentTest==="one"){
        let X,M,S,N;
        if(dataMode==="summary"){
          X=parseFloat(document.getElementById("xbar").value);
          M=parseFloat(document.getElementById("mu0").value);
          S=parseFloat(document.getElementById("s").value);
          N=parseInt(document.getElementById("n").value,10);
          alpha=parseFloat(document.getElementById("alpha").value);
        }else{
          const A=parseNums(document.getElementById("one-raw-text").value);
          X=mean(A); S=sampleStd(A); N=A.length;
          M=parseFloat(document.getElementById("mu0_raw").value);
          alpha=parseFloat(document.getElementById("alpha_raw").value);
        }
        assert(N>1 && S>0, "n>1 かつ s>0 が必要です");
        const se=S/Math.sqrt(N); stat=(X-M)/se; df=N-1; p=pValueFromT(stat,df,tail);
        stepsHTML = `
          <h2 class="font-semibold mb-2">ステップ</h2>
          <ol class="list-decimal ml-5 space-y-1">
            <li>仮説: H<sub>0</sub>: μ = μ<sub>0</sub> / H<sub>1</sub>: ${tail==="two"?"μ ≠ μ<sub>0</sub>":(tail==="right"?"μ > μ<sub>0</sub>":"μ < μ<sub>0</sub>")}</li>
            <li>有意水準: α = ${alpha}</li>
            <li>検定統計量: t = (x<sub>bar</sub> - μ<sub>0</sub>) / (s/√n) = <span class="mono">${fmt(stat)}</span></li>
            <li>分布: t分布 (df=${df})</li>
            <li>p値: <span class="mono">${fmt(p)}</span>（${tail==="two"?"両側":(tail==="right"?"右片側":"左片側")}）</li>
            <li>結論: p ${p<alpha?"<":"≥"} α → <b>${p<alpha?"H0を棄却":"H0を棄却できない"}</b></li>
          </ol>`;
        summaryHTML = `<div class="text-xl mono">t=${fmt(stat)} / df=${df} / p=${fmt(p)} → ${p<alpha?"H0を棄却":"H0を棄却できない"}</div>`;
        drawTCurve(stat, tail, df, alpha);
      } else if(currentTest==="unpaired"){
        let X1,S1,N1,X2,S2,N2; if(dataMode==="summary"){
          X1=parseFloat(document.getElementById("x1").value); S1=parseFloat(document.getElementById("s1").value); N1=parseInt(document.getElementById("n1").value,10);
          X2=parseFloat(document.getElementById("x2").value); S2=parseFloat(document.getElementById("s2").value); N2=parseInt(document.getElementById("n2").value,10);
          alpha=parseFloat(document.getElementById("alpha").value);
        }else{
          const A=parseNums(document.getElementById("unpaired-raw-a").value);
          const B=parseNums(document.getElementById("unpaired-raw-b").value);
          X1=mean(A); S1=sampleStd(A); N1=A.length; X2=mean(B); S2=sampleStd(B); N2=B.length;
          alpha=parseFloat(document.getElementById("alpha_raw_unp").value);
        }
        assert(N1>1 && N2>1 && S1>0 && S2>0, "n1,n2>1 かつ s1,s2>0");
        const se2=Math.pow(S1,2)/N1 + Math.pow(S2,2)/N2;
        const stat=(X1-X2)/Math.sqrt(se2);
        const df=Math.round( (se2*se2) / ( Math.pow(S1,4)/(N1*N1*(N1-1)) + Math.pow(S2,4)/(N2*N2*(N2-1)) ) );
        const p=pValueFromT(stat,df,tail);
        stepsHTML = `
          <h2 class="font-semibold mb-2">ステップ</h2>
          <ol class="list-decimal ml-5 space-y-1">
            <li>仮説: H<sub>0</sub>: μ<sub>1</sub>-μ<sub>2</sub>=0 / H<sub>1</sub>: ${tail==="two"?"μ<sub>1</sub>-μ<sub>2</sub>≠0":(tail==="right"?"μ<sub>1</sub>-μ<sub>2</sub> > 0":"μ<sub>1</sub>-μ<sub>2</sub> < 0")}</li>
            <li>有意水準: α = ${alpha}</li>
            <li>検定統計量: t = (x<sub>bar1</sub>-x<sub>bar2</sub>) / √(s<sub>1</sub><sup>2</sup>/n<sub>1</sub> + s<sub>2</sub><sup>2</sup>/n<sub>2</sub>) = <span class="mono">${fmt(stat)}</span></li>
            <li>自由度: Welch近似 df = ${df}</li>
            <li>p値: <span class="mono">${fmt(p)}</span>（${tail==="two"?"両側":(tail==="right"?"右片側":"左片側")}）</li>
            <li>結論: p ${p<alpha?"<":"≥"} α → <b>${p<alpha?"H0を棄却":"H0を棄却できない"}</b></li>
          </ol>`;
        summaryHTML = `<div class="text-xl mono">t=${fmt(stat)} / df=${df} / p=${fmt(p)} → ${p<alpha?"H0を棄却":"H0を棄却できない"}</div>`;
        drawTCurve(stat, tail, df, alpha);
      } else { // paired
        let Dbar, SD, N; if(dataMode==="summary"){
          Dbar=parseFloat(document.getElementById("dbar").value);
          SD=parseFloat(document.getElementById("sd").value);
          N=parseInt(document.getElementById("n").value,10);
          alpha=parseFloat(document.getElementById("alpha").value);
        }else{
          const A=parseNums(document.getElementById("paired-raw-a").value);
          const B=parseNums(document.getElementById("paired-raw-b").value);
          const n=Math.min(A.length,B.length);
          const D=Array.from({length:n},(_,i)=>B[i]-A[i]);
          Dbar=mean(D); SD=sampleStd(D); N=D.length;
          alpha=parseFloat(document.getElementById("alpha_raw_pair").value);
        }
        assert(N>1 && SD>0, "n>1 かつ sd>0");
        const se=SD/Math.sqrt(N); const stat=Dbar/se; const df=N-1; const p=pValueFromT(stat,df,tail);
        stepsHTML = `
          <h2 class="font-semibold mb-2">ステップ</h2>
          <ol class="list-decimal ml-5 space-y-1">
            <li>仮説: H<sub>0</sub>: μ<sub>d</sub>=0 / H<sub>1</sub>: ${tail==="two"?"μ<sub>d</sub>≠0":(tail==="right"?"μ<sub>d</sub> > 0":"μ<sub>d</sub> < 0")}</li>
            <li>有意水準: α = ${alpha}</li>
            <li>検定統計量: t = d<sub>bar</sub> / (s<sub>d</sub>/√n) = <span class="mono">${fmt(stat)}</span></li>
            <li>分布: t分布 (df=${df})</li>
            <li>p値: <span class="mono">${fmt(p)}</span>（${tail==="two"?"両側":(tail==="right"?"右片側":"左片側")}）</li>
            <li>結論: p ${p<alpha?"<":"≥"} α → <b>${p<alpha?"H0を棄却":"H0を棄却できない"}</b></li>
          </ol>`;
        summaryHTML = `<div class="text-xl mono">t=${fmt(stat)} / df=${df} / p=${fmt(p)} → ${p<alpha?"H0を棄却":"H0を棄却できない"}</div>`;
        drawTCurve(stat, tail, df, alpha);
      }
    } else if(currentTest==="chisq-gof"){
      const O = parseNums(document.getElementById("gof-obs").value);
      const expRaw = parseNums(document.getElementById("gof-exp").value);
      const m = parseInt(document.getElementById("gof-m").value||"0",10);
      const alpha = parseFloat(document.getElementById("gof-alpha").value);
      assert(O.length>1, "観測度数を2カテゴリ以上入力してください");
      assert(expRaw.length===O.length, "期待の数の数は観測と同じにしてください");
      const n = sum(O);
      let E = expRaw.slice(); const eSum = sum(E);
      if(Math.abs(eSum-1) < 1e-8){ E = E.map(p=>p*n); }
      assert(E.every(x=>x>0), "期待度数はすべて正である必要があります");
      const k = O.length; const df = k - 1 - (isFinite(m)?m:0);
      assert(df>=1, "自由度が1以上になるように、カテゴリ数や m を見直してください");
      const chi2 = O.reduce((s,oi,i)=> s + Math.pow(oi - E[i],2)/E[i], 0);
      const p = 1 - chiSquareCdf(chi2, df);
      stepsHTML = `
        <h2 class="font-semibold mb-2">ステップ</h2>
        <ol class="list-decimal ml-5 space-y-1">
          <li>仮説: H<sub>0</sub>: 分布は期待通り / H<sub>1</sub>: 異なる</li>
          <li>有意水準: α = ${alpha}</li>
          <li>統計量: χ² = Σ (O<sub>i</sub> - E<sub>i</sub>)² / E<sub>i</sub> = <span class="mono">${fmt(chi2)}</span></li>
          <li>自由度: df = k - 1 - m = ${df}</li>
          <li>p値（右片側）: <span class="mono">${fmt(p)}</span></li>
          <li>結論: p ${p<alpha?"<":"≥"} α → <b>${p<alpha?"H0を棄却":"H0を棄却できない"}</b></li>
        </ol>`;
      summaryHTML = `<div class="text-xl mono">χ²=${fmt(chi2)} / df=${df} / p=${fmt(p)} → ${p<alpha?"H0を棄却":"H0を棄却できない"}</div>`;
      drawChiCurve(chi2, df, alpha);
    } else if(currentTest==="chisq-ind"){
      const M = parseMatrix(document.getElementById("ind-mat").value);
      const r = M.length, c = Math.max(...M.map(row=>row.length));
      assert(r>=2 && c>=2, "少なくとも 2×2 の表が必要です");
      assert(M.every(row=>row.length===c), "各行の列数をそろえてください");
      const N = sum(M.flat());
      const rowSums = M.map(row=>sum(row));
      const colSums = Array.from({length:c},(_,j)=> sum(M.map(row=>row[j])) );
      let chi2=0;
      for(let i=0;i<r;i++){
        for(let j=0;j<c;j++){
          const Eij = rowSums[i]*colSums[j]/N;
          assert(Eij>0, "期待度数が0のセルがあります");
          chi2 += Math.pow(M[i][j] - Eij,2)/Eij;
        }
      }
      const df = (r-1)*(c-1); const p = 1 - chiSquareCdf(chi2, df);
      const alpha = parseFloat(document.getElementById("ind-alpha").value);
      stepsHTML = `
        <h2 class="font-semibold mb-2">ステップ</h2>
        <ol class="list-decimal ml-5 space-y-1">
          <li>仮説: H<sub>0</sub>: 2変数は独立 / H<sub>1</sub>: 依存関係あり</li>
          <li>有意水準: α = ${alpha}</li>
          <li>統計量: χ² = Σ (O<sub>ij</sub> - E<sub>ij</sub>)² / E<sub>ij</sub> = <span class="mono">${fmt(chi2)}</span></li>
          <li>自由度: df = (r - 1)(c - 1) = ${df}</li>
          <li>p値（右片側）: <span class="mono">${fmt(p)}</span></li>
          <li>結論: p ${p<alpha?"<":"≥"} α → <b>${p<alpha?"H0を棄却":"H0を棄却できない"}</b></li>
        </ol>`;
      summaryHTML = `<div class="text-xl mono">χ²=${fmt(chi2)} / df=${df} / p=${fmt(p)} → ${p<alpha?"H0を棄却":"H0を棄却できない"}</div>`;
      drawChiCurve(chi2, df, alpha);
    } else if(currentTest==="corr"){
      let r, n, alpha;
      if(dataMode==="summary"){
        r = parseFloat(document.getElementById("corr-r").value);
        n = parseInt(document.getElementById("corr-n").value,10);
        alpha = parseFloat(document.getElementById("corr-alpha").value);
      }else{
        const X = parseNums(document.getElementById("corr-x").value);
        const Y = parseNums(document.getElementById("corr-y").value);
        const out = corrFromArrays(X,Y);
        r = out.r; n = out.n;
        alpha = parseFloat(document.getElementById("corr-alpha-raw").value);
      }
      assert(n>=3, "n>=3 が必要です");
      assert(isFinite(r) && Math.abs(r)<=1, "r は -1〜1 の範囲で指定してください");
      const df = n-2; assert(df>=1, "自由度 df=n-2 は 1 以上が必要です");
      const t = r * Math.sqrt((n-2)/(1 - r*r));
      const p = pValueFromT(t, df, tail);
      stepsHTML = `
        <h2 class="font-semibold mb-2">ステップ</h2>
        <ol class="list-decimal ml-5 space-y-1">
          <li>仮説: H<sub>0</sub>: ρ = 0 / H<sub>1</sub>: ${tail==="two" ? "ρ ≠ 0" : (tail==="right" ? "ρ > 0" : "ρ < 0")}</li>
          <li>有意水準: α = ${alpha}</li>
          <li>統計量: t = r √((n-2)/(1-r²)) = <span class="mono">${fmt(t)}</span></li>
          <li>分布: t分布 (df=${df})</li>
          <li>p値: <span class="mono">${fmt(p)}</span>（${tail==="two"?"両側":(tail==="right"?"右片側":"左片側")}）</li>
          <li>結論: p ${p<alpha?"<":"≥"} α → <b>${p<alpha?"H0を棄却":"H0を棄却できない"}</b></li>
        </ol>`;
      summaryHTML = `<div class="text-xl mono">r=${fmt(r,4)} / t=${fmt(t)} / df=${df} / p=${fmt(p)} → ${p<alpha?"H0を棄却":"H0を棄却できない"}</div>`;
      drawTCurve(t, tail, df, alpha);
    }
    document.getElementById("steps-card").innerHTML = stepsHTML;
    document.getElementById("result-card").innerHTML = `<h2 class="font-semibold mb-2">結果サマリー</h2>${summaryHTML}`;
    renderParamsCard(); // 入力値まとめ更新
  }catch(e){
    document.getElementById("err").textContent = "エラー: " + (e && e.message? e.message : e);
  }
}

/* ================== CSV/PNG/PDF ================== */
document.getElementById("btn-load-csv").addEventListener("click", ()=> document.getElementById("file-csv").click());
document.getElementById("file-csv").addEventListener("change", (ev)=>{
  const f = ev.target.files && ev.target.files[0]; if(!f) return;
  const reader = new FileReader();
  reader.onload = () => {
    const text = String(reader.result || "");
    try{
      const rows = text.trim().split(/\r?\n/).map(line=>line.trim()).filter(Boolean);
      const table = rows.map(line => line.split(/[,;\t ]+/).filter(s=>s.length>0));
      if(currentTest==="one" && dataMode==="raw"){
        const nums = table.flat().map(Number).filter(Number.isFinite);
        document.getElementById("one-raw-text").value = nums.join(", ");
      } else if(currentTest==="unpaired" && dataMode==="raw"){
        const A=[], B=[]; table.forEach(cols=>{ if(cols.length>=1) A.push(Number(cols[0])); if(cols.length>=2) B.push(Number(cols[1])); });
        document.getElementById("unpaired-raw-a").value = A.filter(Number.isFinite).join(", ");
        document.getElementById("unpaired-raw-b").value = B.filter(Number.isFinite).join(", ");
      } else if(currentTest==="paired" && dataMode==="raw"){
        const A=[], B=[]; table.forEach(cols=>{ if(cols.length>=1) A.push(Number(cols[0])); if(cols.length>=2) B.push(Number(cols[1])); });
        document.getElementById("paired-raw-a").value = A.filter(Number.isFinite).join(", ");
        document.getElementById("paired-raw-b").value = B.filter(Number.isFinite).join(", ");
      } else if(currentTest==="chisq-ind"){
        const matLines = table.map(cols=> cols.map(Number).filter(Number.isFinite).join(" ")).join("\n");
        document.getElementById("ind-mat").value = matLines;
      } else if(currentTest==="chisq-gof"){
        const flat = table[0].map(Number).filter(Number.isFinite);
        document.getElementById("gof-obs").value = flat.join(", ");
        if(table.length>=2){
          const exp = table[1].map(Number).filter(Number.isFinite);
          document.getElementById("gof-exp").value = exp.join(", ");
        }
      } else if(currentTest==="corr"){
        if(dataMode==="raw"){
          const X=[], Y=[]; table.forEach(cols=>{ if(cols.length>=1) X.push(Number(cols[0])); if(cols.length>=2) Y.push(Number(cols[1])); });
          document.getElementById("corr-x").value = X.filter(Number.isFinite).join(", ");
          document.getElementById("corr-y").value = Y.filter(Number.isFinite).join(", ");
        }
      }
      hookRawPreview(); renderParamsCard();
    }catch(err){
      document.getElementById("err").textContent = "CSV読込エラー: " + (err && err.message? err.message : err);
    } finally { ev.target.value = ""; }
  };
  reader.readAsText(f);
});

async function captureResultBlocks(){
  const blocks = [
    document.getElementById("params-card"),
    document.getElementById("result-card"),
    document.getElementById("steps-card"),
    document.getElementById("graph-card"),
  ].filter(Boolean);
  const canvases = [];
  for (const el of blocks) {
    const c = await html2canvas(el, { backgroundColor:"#ffffff", scale:2, useCORS:true,
      windowWidth: document.documentElement.scrollWidth, windowHeight: document.documentElement.scrollHeight });
    canvases.push(c);
  }
  const width = Math.max(...canvases.map(c => c.width));
  const height = canvases.reduce((h, c) => h + c.height, 0);
  const merged = document.createElement("canvas");
  merged.width = width; merged.height = height;
  const ctx = merged.getContext("2d");
  ctx.fillStyle = "#ffffff"; ctx.fillRect(0, 0, width, height);
  let y = 0;
  for (const c of canvases) { const x = Math.floor((width - c.width) / 2); ctx.drawImage(c, x, y); y += c.height; }
  return merged;
}

document.getElementById("btn-save-png").addEventListener("click", async ()=>{
  try{ const merged = await captureResultBlocks(); const url = merged.toDataURL("image/png"); const a = document.createElement("a"); a.href = url; a.download = "hypotest_result.png"; a.click(); }
  catch(e){ document.getElementById("err").textContent="PNG保存エラー: "+e; }
});
document.getElementById("btn-save-pdf").addEventListener("click", async ()=>{
  try{
    const { jsPDF } = window.jspdf;
    const merged = await captureResultBlocks();
    const pdf = new jsPDF({unit:"pt", format:"a4"});
    const pageW = pdf.internal.pageSize.getWidth();
    const pageH = pdf.internal.pageSize.getHeight();
    const margin = 20; const imgW = pageW - margin*2;
    const pageCanvas = document.createElement("canvas");
    pageCanvas.width = merged.width;
    const ctx = pageCanvas.getContext("2d");
    let offsetY = 0;
    while (offsetY < merged.height) {
      const sliceHpx = Math.min(merged.height - offsetY, Math.floor(((pageH - margin*2) / imgW) * merged.width));
      pageCanvas.height = sliceHpx;
      ctx.clearRect(0, 0, pageCanvas.width, pageCanvas.height);
      ctx.drawImage(merged, 0, offsetY, merged.width, sliceHpx, 0, 0, pageCanvas.width, pageCanvas.height);
      const url = pageCanvas.toDataURL("image/png");
      if (offsetY > 0) pdf.addPage();
      pdf.addImage(url, "PNG", margin, margin, imgW, (sliceHpx/merged.width)*imgW);
      offsetY += sliceHpx;
    }
    pdf.save("hypotest_result.pdf");
  }catch(e){ document.getElementById("err").textContent="PDF保存エラー: "+e; }
});

/* ================== 起動時 ================== */
document.addEventListener("DOMContentLoaded",()=>{
  document.getElementById("year").textContent=new Date().getFullYear();
  document.querySelectorAll("#tabs [data-test]").forEach(btn=>{
    btn.addEventListener("click",()=>{
      currentTest = btn.getAttribute("data-test");
      setActiveTab(); renderInputs();
      document.getElementById("steps-card").innerHTML="";
      document.getElementById("result-card").innerHTML="";
      document.getElementById("plot").innerHTML="";
      document.getElementById("graph-note").textContent="";
      document.getElementById("err").textContent="";
    });
  });
  setActiveTab(); renderInputs(); renderParamsCard();
  // 入力が変わる度に「入力値まとめ」を更新
  document.body.addEventListener("change",(e)=>{
    if(e.target.closest("#input-card") || e.target.name==="mode" || e.target.name==="tail"){ renderParamsCard(); }
  });
});
</script>
</body>
</html>
